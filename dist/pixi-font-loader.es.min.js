/* eslint-disable */
import{LoaderResource as t}from"@pixi/loaders";function e(t){const e=/\s*([a-z\-]+)\s*:\s*((?:[^;]*url\(.*?\)[^;]*|[^;]*)*)\s*(?:;|$)/gi,s={};let o;for(;o=e.exec(t);)s[o[1].toLowerCase()]=o[2];return s}function s(t){let e="";const s=Object.keys(t).sort();for(let o=0;o<s.length;o++)e+=` ${s[o]}: ${t[s[o]]};`;return e.substring(1)}function o(t,e){return null!=t?t:e()}function n(t){let e,s=t[0],o=1;for(;o<t.length;){const n=t[o],a=t[o+1];if(o+=2,("optionalAccess"===n||"optionalCall"===n)&&null==s)return;"access"===n||"optionalAccess"===n?(e=s,s=a(s)):"call"!==n&&"optionalCall"!==n||(s=a(((...t)=>s.call(e,...t))),e=void 0)}return s}class a{static __initStatic(){this.supportedFontExtensions=["ttf","otf","woff","woff2"]}static add(...e){if(!document.fonts||!FontFace||!Promise)throw new Error("WebfontLoaderPlugin relies heavily on Promises and the FontFace API and your browser doesn't support them.");t.setExtensionLoadType("css",t.LOAD_TYPE.XHR),t.setExtensionXhrType("css",t.XHR_RESPONSE_TYPE.TEXT),t.setExtensionLoadType("ttf",t.LOAD_TYPE.XHR),t.setExtensionXhrType("ttf",t.XHR_RESPONSE_TYPE.BUFFER);for(const e of a.supportedFontExtensions)t.setExtensionLoadType(e,t.LOAD_TYPE.XHR),t.setExtensionXhrType(e,t.XHR_RESPONSE_TYPE.BUFFER)}static use(t,e){t.extension.endsWith("css")?a.loadFromCSS(t).finally((()=>e())):a.supportedFontExtensions.some((e=>t.extension.endsWith(e)))?a.loadFromBuffer(t).finally((()=>e())):e()}static __initStatic2(){this.waitFont=async(t,e,s)=>{const n=o(t["font-style"],(()=>"")),a=o(t["font-weight"],(()=>"")),c=o(t["font-stretch"],(()=>"")),i=t["font-family"];s=s||1/0;let l=(new Date).getTime();const r=l,f=[n,a,c,"100px",i].join(" ");let p=0;do{if(p=(await document.fonts.load(f,e)).length,p>0)return;await new Promise((t=>setTimeout(t,16))),l=(new Date).getTime()}while(l-r<s);console.warn(`Error loading font! Your font ${t["font-family"]} timed out after ${s}ms`)}}static loadFromCSS(t){const c=document.createElement("link");c.rel="stylesheet",c.type="text/css",c.href=t.url,document.head.appendChild(c);const i=function(t){const o=/([\s\S]+?)\{([\s\S]*?)\}/gi,n=[];let a,c;for(t=t.replace(/\/\*[\s\S]*?\*\//g,"");c=o.exec(t);){const t=e(c[2].trim());t.cssText=s(t),a={selectorText:c[1].trim().replace(/\s*\,\s*/,", "),style:t,cssText:""},a.cssText=`${a.selectorText} { ${a.style.cssText} }`,n.push(a)}return n}(t.data),l=[],r=[],f=n([t,"access",t=>t.metadata,"optionalAccess",t=>t.font,"optionalAccess",t=>t.testString]),p=o(n([t,"access",t=>t.metadata,"optionalAccess",t=>t.font,"optionalAccess",t=>t.timeout]),(()=>t.timeout));for(const t of i)"string"==typeof t.style["font-family"]&&(l.push(a.waitFont(t.style,f,p)),r.push({fontFamily:t.style["font-family"].replace(/['|"]/gi,""),fontStyle:t.style["font-style"],fontWeight:t.style["font-weight"]}));return t.styles=r,Promise.all(l)}static loadFromBuffer(t){const e=o(n([t,"access",t=>t.metadata,"optionalAccess",t=>t.font,"optionalAccess",t=>t.family]),(()=>t.name));return document.fonts.add(new FontFace(e,t.data,n([t,"access",t=>t.metadata,"optionalAccess",t=>t.font]))),t.styles=[{fontFamily:e.replace(/['|"]/gi,""),fontStyle:n([t,"access",t=>t.metadata,"optionalAccess",t=>t.font,"optionalAccess",t=>t.style]),fontWeight:n([t,"access",t=>t.metadata,"optionalAccess",t=>t.font,"optionalAccess",t=>t.weight])}],a.waitFont({"font-family":e,"font-stretch":n([t,"access",t=>t.metadata,"optionalAccess",t=>t.font,"optionalAccess",t=>t.stretch]),"font-style":n([t,"access",t=>t.metadata,"optionalAccess",t=>t.font,"optionalAccess",t=>t.style]),"font-weight":n([t,"access",t=>t.metadata,"optionalAccess",t=>t.font,"optionalAccess",t=>t.weight])},n([t,"access",t=>t.metadata,"optionalAccess",t=>t.font,"optionalAccess",t=>t.testString]),o(n([t,"access",t=>t.metadata,"optionalAccess",t=>t.font,"optionalAccess",t=>t.timeout]),(()=>t.timeout)))}}a.__initStatic(),a.__initStatic2();export{a as WebfontLoaderPlugin};
//# sourceMappingURL=pixi-font-loader.es.min.js.map
